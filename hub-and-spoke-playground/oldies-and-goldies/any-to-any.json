{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
    "variables": {
        "routeTables_all_to_firewall_we_name": "all-to-firewall-we",
        "routeTables_all_to_firewall_ne_name": "all-to-firewall-ne",	
        "ipGroups_all_spokes_subnets_name": "all-spokes-subnets",
        "my_firewall_policy_name": "my-firewall-policy",
        "azureFirewalls_lab_firewall_name": "lab-firewall",
        "publicIPAddresses_hub_net_fw_publicip_name": "hub-net-fw-publicip",
        "virtualNetworks_hub_lab_net_name": "hub-lab-net",
        "virtualNetworks_spoke_01_name": "spoke-01",
        "virtualNetworks_spoke_02_name": "spoke-02",
        "virtualNetworks_spoke_03_name": "spoke-03"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2022-05-01",
            "name": "[variables('routeTables_all_to_firewall_we_name')]",
            "location": "westeurope",
            "dependsOn": [
            ],
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "all",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', variables('routeTables_all_to_firewall_we_name'), 'all')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.12.3.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2022-05-01",
            "name": "[variables('routeTables_all_to_firewall_ne_name')]",
            "location": "northeurope",
            "dependsOn": [
            ],
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "all",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', variables('routeTables_all_to_firewall_ne_name'), 'all')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.12.3.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
         {
            "type": "Microsoft.Network/ipGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('ipGroups_all_spokes_subnets_name')]",
            "location": "westeurope",
            "properties": {
                "ipAddresses": [
                    "10.13.1.0/24",
                    "10.13.2.0/24",
                    "10.13.3.0/24"
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2022-05-01",
            "name": "[variables('my_firewall_policy_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
            ],	
            "properties": {
                "sku": {
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "intrusionDetection": {
                    "mode": "Off"
                }
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2022-05-01",
            "name": "[concat(variables('my_firewall_policy_name'), '/DefaultApplicationRuleCollectionGroup')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', variables('my_firewall_policy_name'))]",
                "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
            ],
            "properties": {
                "priority": 300,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "all-ok",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [],
                                "destinationAddresses": [],
                                "sourceIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ]
                            }
                        ],
                        "name": "internet-out-collection",
                        "priority": 1000
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Deny"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "block-fb",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*.facebook.com,facebook.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [],
                                "destinationAddresses": [],
                                "sourceIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ]
                            },
                            {
                                "ruleType": "ApplicationRule",
                                "name": "block-twitter",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*.twitter.com,twitter.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [],
                                "destinationAddresses": [],
                                "sourceIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ]
                            },
                            {
                                "ruleType": "ApplicationRule",
                                "name": "block-xxx",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    },
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [
                                    "Nudity",
                                    "DatingAndPersonals",
                                    "PornographyAndSexuallyExplicit"
                                ],
                                "targetFqdns": [],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [],
                                "destinationAddresses": [],
                                "sourceIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ]
                            }
                        ],
                        "name": "block-sites-collect",
                        "priority": 900
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2022-05-01",
            "name": "[concat(variables('my_firewall_policy_name'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', variables('my_firewall_policy_name'))]",
                "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "all-to-all",
                                "ipProtocols": [
                                    "Any"
                                ],
                                "sourceAddresses": [],
                                "sourceIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ],
                                "destinationAddresses": [],
                                "destinationIpGroups": [
                                    "[resourceId('Microsoft.Network/ipGroups', variables('ipGroups_all_spokes_subnets_name'))]"
                                ],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "*"
                                ]
                            }
                        ],
                        "name": "my-net-rules",
                        "priority": 1000
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[variables('virtualNetworks_spoke_03_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"              
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.13.3.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_03_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.13.3.0/26",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "services",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_03_name'), 'services')]",
                        "properties": {
                            "addressPrefix": "10.13.3.64/26",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_ne_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[variables('virtualNetworks_spoke_01_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"  
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.13.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_01_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.13.1.0/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "services",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_01_name'), 'services')]",
                        "properties": {
                            "addressPrefix": "10.13.1.64/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[variables('virtualNetworks_spoke_02_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"  
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.13.2.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "services",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_02_name'), 'services')]",
                        "properties": {
                            "addressPrefix": "10.13.2.64/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_spoke_02_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.13.2.0/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_all_to_firewall_we_name'))]"
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2022-05-01",
            "name": "[variables('azureFirewalls_lab_firewall_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', variables('my_firewall_policy_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                 "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses_hub_net_fw_publicip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_hub_lab_net_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('my_firewall_policy_name'))]"
                }
            }
        }
    ]
}

